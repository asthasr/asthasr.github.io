<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data Blog = Blog { me :: Programmer, posts :: [Opinion] }</title>
    <link>https://asthasr.github.io/</link>
    <description>Recent content on data Blog = Blog { me :: Programmer, posts :: [Opinion] }</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Nov 2019 14:51:10 +0700</lastBuildDate>
    
	<atom:link href="https://asthasr.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>On Symbolic Logic</title>
      <link>https://asthasr.github.io/posts/on-symbolic-logic/</link>
      <pubDate>Wed, 20 Nov 2019 14:51:10 +0700</pubDate>
      
      <guid>https://asthasr.github.io/posts/on-symbolic-logic/</guid>
      <description>MathJax = {tex: { inlineMath: [[&#39;$&#39;, &#39;$&#39;]] }};  I went to public school in the United States, and I was always &amp;ldquo;bad at math.&amp;rdquo; I hated homework and tests, and it never got better: as I went through the grades, the problems got longer and more intricate, and I inevitably would make a calculation error&amp;mdash;misplacing a decimal or flubbing an easy sum&amp;mdash;halfway through. I got used to seeing $\color{red}{-\frac{1}{2}}$ on my papers.</description>
    </item>
    
    <item>
      <title>The Danger of &#34;Simplicity&#34;</title>
      <link>https://asthasr.github.io/posts/danger-of-simplicity/</link>
      <pubDate>Sat, 16 Nov 2019 09:05:35 +0700</pubDate>
      
      <guid>https://asthasr.github.io/posts/danger-of-simplicity/</guid>
      <description>There are a few tendencies among programmers that involve the totem of &amp;ldquo;simplicity.&amp;rdquo; There&amp;rsquo;s the ancient concept of KISS, of course, but there&amp;rsquo;s also the much-abused YAGNI, the insistence that we &amp;ldquo;Choose Boring Technology,&amp;rdquo; entire languages that base their elevator pitch around the idea that they&amp;rsquo;re &amp;ldquo;simple,&amp;rdquo; and the concept in object-oriented design that &amp;ldquo;every class should have a single responsibility.&amp;rdquo;
The problem with these approaches is that &amp;ldquo;simplicity&amp;rdquo; never gets a rigorous definition.</description>
    </item>
    
    <item>
      <title>&#34;Parsing&#34; in Python</title>
      <link>https://asthasr.github.io/posts/parsing-in-python/</link>
      <pubDate>Sun, 10 Nov 2019 14:02:05 +0700</pubDate>
      
      <guid>https://asthasr.github.io/posts/parsing-in-python/</guid>
      <description>&lt;p&gt;I recently read &lt;a href=&#34;https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/&#34;&gt;&amp;ldquo;Parse, Don&amp;rsquo;t Validate&amp;rdquo;
&lt;/a&gt;
and liked it enough to share it with my coworkers and let it &lt;a href=&#34;https://lobste.rs/s/uemphs/parse_don_t_validate&#34;&gt;bring me out of
retirement&lt;/a&gt; on
&lt;a href=&#34;https://lobste.rs/&#34;&gt;lobste.rs&lt;/a&gt;. It captures a concept that I have struggled to
explain, leading to many cases where I couldn&amp;rsquo;t say why I thought something was
better beyond a vague &amp;ldquo;It&amp;rsquo;s a matter of taste.&amp;rdquo; That&amp;rsquo;s not very satisfactory as
a justification when you&amp;rsquo;re trying to explain to someone why they should rework
a piece of code in a review.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>